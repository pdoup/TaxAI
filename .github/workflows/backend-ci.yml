name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths: # Only run if backend files change
      - 'tax-filer-backend/**'
      - '.github/workflows/backend-ci.yml'
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'tax-filer-backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  lint-and-test:
    name: Lint & Test Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tax-filer-backend # Set working directory for all steps in this job

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies (including dev)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Lint with Flake8
        run: flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Check formatting with Black
        run: black app --check --diff

      - name: Run Pytest
        env: # Environment variables for tests
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_TESTING }}
          OPENAI_MODEL_NAME: ${{ vars.OPENAI_MODEL_NAME_TESTING || 'gpt-4-turbo' }} # Use variable, fallback
        run: |
          pytest app/tests -v --cov=app --cov-report=xml --cov-report=term-missing
          # -v for verbose output
          # --cov=app to measure coverage for the 'app' directory
          # --cov-report=xml to generate an XML coverage report (for Codecov, etc.)
          # --cov-report=term-missing to show missing lines in the console

  build-docker-image:
    name: Build Backend Docker Image
    runs-on: ubuntu-latest
    needs: lint-and-test # Run only if lint-and-test job succeeds
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') # Build only on push to main/develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      #  Don't push image to any registry
      #- name: Login to Docker Hub (or other registry)
      #  if: success() # Only if previous steps were successful & if you intend to push
      #  uses: docker/login-action@v3
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}
          # For GitHub Container Registry (ghcr.io):
          # registry: ghcr.io
          # username: ${{ github.actor }}
          # password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image (no push)
        uses: docker/build-push-action@v5
        with:
          context: ./tax-filer-backend
          file: ./tax-filer-backend/Dockerfile
          push: false
          tags: |
            local/tax-filer-backend:latest
            local/tax-filer-backend:${{ github.sha }}
          # build-args: |
          #   SOME_BUILD_ARG=value
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true # Make the image available for subsequent steps in the same job (for later)
